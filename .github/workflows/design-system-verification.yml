name: Design System v2 Verification

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  token-verification:
    name: Design Token Compliance
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run token verification
        run: npm run verify
        continue-on-error: false

      - name: Comment PR with results
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ Design token verification failed! Please fix hardcoded colors and run `npm run verify` locally.'
            })

  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Run visual regression tests
        run: npx playwright test --project=${{ matrix.browser }}
        continue-on-error: false

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.browser }}
          path: |
            test-results/
            playwright-report/
          retention-days: 30

      - name: Upload screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failed-screenshots-${{ matrix.browser }}
          path: test-results/**/*.png
          retention-days: 30

      - name: Comment PR with visual diff
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ Visual regression detected in ${{ matrix.browser }}! Please review the uploaded screenshots in the Actions artifacts.'
            })

  accessibility:
    name: Accessibility Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run accessibility tests
        run: npx playwright test --grep "Accessibility" --timeout=60000
        continue-on-error: true

      - name: Upload accessibility results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  consistency:
    name: Cross-Component Consistency
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run consistency tests
        run: npx playwright test --grep "Component Consistency"
        continue-on-error: true

      - name: Upload consistency results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: consistency-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  report:
    name: Generate Report
    runs-on: ubuntu-latest
    needs: [token-verification, visual-regression, accessibility, consistency]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Generate summary report
        run: |
          echo "# Design System v2 Verification Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.token-verification.result }}" == "success" ]; then
            echo "✅ **Design Token Compliance:** PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Design Token Compliance:** FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.visual-regression.result }}" == "success" ]; then
            echo "✅ **Visual Regression Tests:** PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Visual Regression Tests:** FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.accessibility.result }}" == "success" ]; then
            echo "✅ **Accessibility Checks:** PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Accessibility Checks:** NEEDS REVIEW" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.consistency.result }}" == "success" ]; then
            echo "✅ **Consistency Checks:** PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Consistency Checks:** NEEDS REVIEW" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Documentation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- 📚 [Design Tokens Documentation](./DESIGN_TOKENS_V2.md)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ [Component Checklist](./COMPONENT_CHECKLIST_V2.md)" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 [Verification Summary](./VERIFICATION_SUMMARY.md)" >> $GITHUB_STEP_SUMMARY

      - name: Comment PR with summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const tokenStatus = '${{ needs.token-verification.result }}' === 'success' ? '✅' : '❌';
            const visualStatus = '${{ needs.visual-regression.result }}' === 'success' ? '✅' : '⚠️';
            const a11yStatus = '${{ needs.accessibility.result }}' === 'success' ? '✅' : '⚠️';
            const consistencyStatus = '${{ needs.consistency.result }}' === 'success' ? '✅' : '⚠️';

            const body = `## Design System v2 Verification Report

            | Check | Status |
            |-------|--------|
            | Design Token Compliance | ${tokenStatus} |
            | Visual Regression Tests | ${visualStatus} |
            | Accessibility Checks | ${a11yStatus} |
            | Consistency Checks | ${consistencyStatus} |

            ${tokenStatus === '❌' ? '⚠️ **Action Required:** Fix hardcoded colors before merging. Run \`npm run verify\` locally.' : ''}
            ${visualStatus === '⚠️' ? '⚠️ **Action Required:** Review visual regression artifacts.' : ''}

            📚 See [Verification Summary](./VERIFICATION_SUMMARY.md) for details.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  deployment-check:
    name: Pre-Deployment Validation
    runs-on: ubuntu-latest
    needs: [token-verification, visual-regression]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate deployment readiness
        run: |
          echo "✅ Design token verification passed"
          echo "✅ Visual regression tests passed"
          echo "✅ Ready for deployment to production"

      - name: Create deployment summary
        run: |
          echo "# Deployment Ready ✅" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All verification checks passed. Design System v2 is ready for deployment." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
